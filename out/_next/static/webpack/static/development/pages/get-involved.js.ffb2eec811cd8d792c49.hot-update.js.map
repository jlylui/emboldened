{"version":3,"file":"static/webpack/static\\development\\pages\\get-involved.js.ffb2eec811cd8d792c49.hot-update.js","sources":["webpack:///./components/CommonField.js","webpack:///./components/CustomFieldGroup.js","webpack:///./components/Footer.js","webpack:///./components/Layout.js","webpack:///./components/NavBar.js","webpack:///./components/PartnerForm.js","webpack:///./components/VolunteerForm.js","webpack:///./pages/get-involved.js"],"sourcesContent":["import { Form, Field } from \"formik\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst CommonFiledSchema = {\r\n  firstName: Yup.string()\r\n    .min(2, \"*invalid\")\r\n    .max(50, \"*invalid\")\r\n    .required(\"*required\"),\r\n  lastName: Yup.string()\r\n    .min(2, \"*invalid\")\r\n    .max(50, \"*invalid\")\r\n    .required(\"*required\"),\r\n  email: Yup.string()\r\n    .email(\"*invalid email\")\r\n    .required(\"*required\"),\r\n  countryCode: Yup.string()\r\n    .min(2, \"*invalid format\")\r\n    .matches(/^\\+\\d{2,4}/, \"*invalid format\"),\r\n  phone: Yup.string().matches(/^\\d{1}[\\d\\-\\s]{5,}/, \"*invalid\"),\r\n  conference: Yup.array()\r\n    .min(1, \"*select at least one location\")\r\n    .required(\"*required\")\r\n};\r\n\r\nconst CommonFiled = props => {\r\n  const { values, errors, status, touched, handleChange } = props;\r\n  return (\r\n    <>\r\n      <div className=\"form-row\">\r\n        <div\r\n          className={`form-group col-md-6 ${\r\n            touched.firstName\r\n              ? errors.firstName\r\n                ? \"has-danger\"\r\n                : \"has-success\"\r\n              : \"\"\r\n          }`}>\r\n          <label>\r\n            First Name<span className=\"text-danger\"> *</span>\r\n          </label>\r\n          {errors.firstName && touched.firstName ? (\r\n            <span className=\"error-text\">{errors.firstName}</span>\r\n          ) : null}\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"firstName\"\r\n            value={values.firstName}\r\n            onChange={handleChange}\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`form-group col-md-6 ${\r\n            touched.lastName\r\n              ? errors.lastName\r\n                ? \"has-danger\"\r\n                : \"has-success\"\r\n              : \"\"\r\n          }`}>\r\n          <label>\r\n            Last Name<span className=\"text-danger\"> *</span>\r\n          </label>\r\n          {errors.lastName && touched.lastName ? (\r\n            <span className=\"error-text\">{errors.lastName}</span>\r\n          ) : null}\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"lastName\"\r\n            value={values.lastName}\r\n            onChange={handleChange}\r\n            required={true}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`form-group ${\r\n          touched.email ? (errors.email ? \"has-danger\" : \"has-success\") : \"\"\r\n        }`}>\r\n        <label>\r\n          Email<span className=\"text-danger\"> *</span>\r\n        </label>\r\n        {errors.email && touched.email ? (\r\n          <span className=\"error-text\">{errors.email}</span>\r\n        ) : null}\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          placeholder=\"example@example.com\"\r\n          name=\"email\"\r\n          value={values.email}\r\n          onChange={handleChange}\r\n          required={true}\r\n        />\r\n      </div>\r\n      <div className=\"form-row\">\r\n        <div\r\n          className={`form-group col-md-4 ${\r\n            touched.countryCode\r\n              ? errors.countryCode\r\n                ? \"has-danger\"\r\n                : \"has-success\"\r\n              : \"\"\r\n          }`}>\r\n          <label>Country code</label>\r\n          {errors.countryCode && touched.countryCode ? (\r\n            <span className=\"error-text\">{errors.countryCode}</span>\r\n          ) : null}\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"countryCode\"\r\n            placeholder=\"+61\"\r\n            value={values.countryCode}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`form-group col-md-8 ${\r\n            touched.phone ? (errors.phone ? \"has-danger\" : \"has-success\") : \"\"\r\n          }`}>\r\n          <label>Phone number</label>\r\n          {errors.phone && touched.phone ? (\r\n            <span className=\"error-text\">{errors.phone}</span>\r\n          ) : null}\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"phone\"\r\n            value={values.phone}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div className=\"form-group\">\r\n        <label>\r\n          Conferences Interested:<span className=\"text-danger\"> *</span>\r\n        </label>\r\n        {errors.conference && touched.conference ? (\r\n          <span className=\"error-text\">{errors.conference}</span>\r\n        ) : null}\r\n        <br />\r\n        <Checkbox\r\n          name=\"conference\"\r\n          value=\"Sydney\"\r\n          className=\"form-check-inline\"\r\n        />\r\n        <Checkbox\r\n          name=\"conference\"\r\n          value=\"Perth\"\r\n          className=\"form-check-inline\"\r\n        />\r\n        <Checkbox\r\n          name=\"conference\"\r\n          value=\"Kuala Lumpur\"\r\n          className=\"form-check-inline\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommonFiled;\r\nexport { CommonFiledSchema };\r\n","import React from \"react\";\r\nimport { Field } from \"formik\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nconst CustomFieldGroup = props => {\r\n  const { values, errors, handleChange, groupValues } = props;\r\n\r\n  function AddToFieldArray(props) {\r\n    return (\r\n      <Field name={props.name}>\r\n        {({ field, form }) => {\r\n          return (\r\n            <a\r\n              className=\"form-control form-check\"\r\n              style={{\r\n                borderRadius: \"3px\",\r\n                fontSize: \"14px\",\r\n                cursor: \"pointer\",\r\n                padding: \"4px 6px\"\r\n              }}\r\n              onClick={() => {\r\n                const index = field.value.indexOf(\"Other\");\r\n                if (typeof props.error === \"undefined\") {\r\n                  if (\r\n                    typeof form.values[props.nameTmp] !== \"undefined\" &&\r\n                    form.values[props.nameTmp] !== \"\" &&\r\n                    index != -1\r\n                  ) {\r\n                    form.values[props.name][index] = form.values[props.nameTmp];\r\n                    groupValues.checkBoxLabels.splice(\r\n                      groupValues.checkBoxLabels.length - 1,\r\n                      0,\r\n                      form.values[props.nameTmp]\r\n                    );\r\n                  }\r\n                }\r\n                form.setFieldValue(props.nameTmp, \"\");\r\n                // remove empty value and \"Other\" from array\r\n                // const nextValue = form.values[props.name].filter(\r\n                //   value => value !== \"Other\" && value !== \"\"\r\n                // );\r\n                // form.setFieldValue(props.name, nextValue);\r\n              }}>\r\n              <FontAwesomeIcon icon=\"plus\" />\r\n            </a>\r\n          );\r\n        }}\r\n      </Field>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{groupValues.groupTitle}</label>\r\n      <br />\r\n      {groupValues.checkBoxLabels.map((checkbox, index) => (\r\n        <Checkbox\r\n          key={index}\r\n          name={groupValues.name}\r\n          value={checkbox}\r\n          className={checkbox === \"Other\" ? \"\" : groupValues.className}\r\n        />\r\n      ))}\r\n      {values[groupValues.name].includes(\"Other\") ? (\r\n        <div className=\"form-row\" style={{ paddingLeft: \"5px\" }}>\r\n          <div className=\"form-group\" style={{ display: \"inline-block\" }}>\r\n            <AddToFieldArray\r\n              name={groupValues.name}\r\n              nameTmp={groupValues.tmp}\r\n              className={groupValues.className}\r\n              error={errors[groupValues.tmp]}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"form-group\"\r\n            style={{\r\n              minWidth: \"80%\",\r\n              display: \"inline-block\",\r\n              paddingLeft: \"10px\"\r\n            }}>\r\n            <textarea\r\n              className=\"form-control\"\r\n              name={groupValues.tmp}\r\n              rows=\"1\"\r\n              placeholder={groupValues.placeholder}\r\n              onChange={handleChange}\r\n              value={values[groupValues.tmp]}></textarea>\r\n            {errors[groupValues.tmp] ? (\r\n              <span className=\"error-text\">{errors[groupValues.tmp]}</span>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      {values[groupValues.tmp] === \"\" && values[groupValues.name].length > 0 ? (\r\n        <div\r\n          className=\"text-success\"\r\n          style={{\r\n            fontSize: \".8571em\",\r\n            padding: \"10px 0px\",\r\n            color: \"#888\"\r\n          }}>\r\n          <span style={{ fontWeight: \"bold\" }}>Selected values:</span>\r\n          <br />[{values[groupValues.name].toString()}]\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default CustomFieldGroup;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst date = new Date().getFullYear();\r\nconst footerNavMenue = [\r\n  {\r\n    label: \"Donation \",\r\n    link: \"/get-involved#donation\",\r\n    icon: \"\"\r\n  },\r\n  {\r\n    label: \"Contact Us\",\r\n    link: \"/#contact\",\r\n    icon: \"envelope\"\r\n  }\r\n];\r\n\r\nconst Footer = props => {\r\n  const followUs = props.socialMedia.map((link, index) => (\r\n    <li className=\"list-inline-item\" key={index}>\r\n      <a href={link.link} className=\"footer-icon\">\r\n        <FontAwesomeIcon icon={link.icon} size=\"2x\" />\r\n      </a>\r\n    </li>\r\n  ));\r\n\r\n  const footerNav = footerNavMenue.map((navLink, index) => (\r\n    <li key={index}>\r\n      <a href={navLink.link}>{navLink.label}</a>\r\n    </li>\r\n  ));\r\n  return (\r\n    <>\r\n      <ContactForm\r\n        show={contactModal}\r\n        handleContactModal={handleContactModal}\r\n      />\r\n      <footer className=\"footer footer-default\">\r\n        <div className=\"container text-center\">\r\n          <p className=\"text-muted\">&copy;{date} Emboldened. Follow us</p>\r\n          <ul className=\"list-inline\">{followUs}</ul>\r\n          <div style={{ paddingTop: \"20px\" }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <nav style={{ textAlign: \"left\" }}>\r\n                  <ul>{footerNav}</ul>\r\n                </nav>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"copyright\">\r\n                  Made with <FontAwesomeIcon icon={\"heart\"} /> and{\" \"}\r\n                  <FontAwesomeIcon icon={\"coffee\"} /> by Emboldened Team in\r\n                  Sydney\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import \"../static/bootstrap.min.css\";\r\nimport \"../static/theme.css\";\r\nimport \"../static/animate.css\";\r\nimport \"./Layout.css\";\r\n\r\nimport Head from \"next/head\";\r\nimport NavBar from \"./NavBar\";\r\nimport Footer from \"./Footer\";\r\n\r\nimport { library, config } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faPlusSquare } from \"@fortawesome/free-regular-svg-icons\";\r\nimport {\r\n  faHome,\r\n  faUsers,\r\n  faVideo,\r\n  faEnvelope,\r\n  faHandsHelping,\r\n  faHandshake,\r\n  faUserPlus,\r\n  faGift,\r\n  faBars,\r\n  faSpinner,\r\n  faHeart,\r\n  faCoffee,\r\n  faPlus,\r\n  faCross,\r\n  faComment\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconfig.autoAddCss = false;\r\nlibrary.add(\r\n  fab,\r\n  faHome,\r\n  faUsers,\r\n  faVideo,\r\n  faEnvelope,\r\n  faHandsHelping,\r\n  faHandshake,\r\n  faUserPlus,\r\n  faGift,\r\n  faBars,\r\n  faSpinner,\r\n  faHeart,\r\n  faCoffee,\r\n  faPlus,\r\n  faPlusSquare,\r\n  faCross,\r\n  faComment\r\n);\r\n\r\nconst navMenu = [\r\n  {\r\n    brand: \"Emboldened\",\r\n    label: \"home\",\r\n    link: \"/\",\r\n    icon: \"home\",\r\n    logo: \"../static/img/jl-icon-19144-light-square.png\"\r\n  },\r\n  {\r\n    label: \"About Us\",\r\n    link: \"/about\",\r\n    icon: \"users\"\r\n  },\r\n  {\r\n    label: \"Behind the Scenes\",\r\n    link: \"/behind-scenes\",\r\n    icon: \"video\"\r\n  },\r\n  {\r\n    label: \"Contact Us\",\r\n    link: \"/#contact\",\r\n    icon: \"envelope\"\r\n  },\r\n  {\r\n    label: \"Get Invovled\",\r\n    link: \"/get-involved\",\r\n    icon: \"handshake\"\r\n  },\r\n  {\r\n    label: \"Faith Statement\",\r\n    link: \"/faith-statement\",\r\n    icon: \"cross\"\r\n  }\r\n];\r\n\r\nconst socialMedia = [\r\n  {\r\n    icon: [\"fab\", \"facebook\"],\r\n    link: \"\"\r\n  },\r\n  {\r\n    icon: [\"fab\", \"instagram\"],\r\n    link: \"\"\r\n  },\r\n  {\r\n    icon: [\"fab\", \"youtube\"],\r\n    link: \"\"\r\n  },\r\n  {\r\n    icon: [\"fab\", \"twitter\"],\r\n    link: \"\"\r\n  },\r\n  {\r\n    icon: [\"fab\", \"pinterest\"],\r\n    link: \"\"\r\n  }\r\n];\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Emboldened</title> {/*todo make dynamic */}\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\r\n      </Head>\r\n\r\n      <NavBar navMenu={navMenu} />\r\n\r\n      <div\r\n        className={`${props.banner.className} page-header clear-filter `}\r\n        filter-color=\"black\">\r\n        <div\r\n          className=\"page-header-image\"\r\n          data-parallax=\"true\"\r\n          style={{\r\n            backgroundImage: `url(${props.banner.image})`\r\n          }}></div>\r\n        <div className=\"container\">\r\n          <div className=\"content-center\">\r\n            <h1 className=\"h1-seo\">{props.banner.title}</h1>\r\n            <h3 className=\"h3-seo\">{props.banner.subTitle}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"main\">{props.children}</div>\r\n      <Footer socialMedia={socialMedia} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import \"./NavBar.css\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Link from \"next/link\";\r\n\r\nconst NavBar = props => {\r\n  const [navbarColor, setNavbarColor] = useState(\"navbar-transparent\");\r\n  const [collapseOpen, setCollapseOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const linkClick = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setCollapseOpen(!collapseOpen);\r\n  };\r\n\r\n  const navMenu = props.navMenu.map((menu, index) => {\r\n    if (index === 0) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <li className=\"nav-item\" key={index}>\r\n          <Link href={menu.link}>\r\n            <a className=\"nav-link\" onClick={linkClick}>\r\n              {\" \"}\r\n              <span className=\"nav-top-icon\">\r\n                <FontAwesomeIcon icon={menu.icon} />\r\n              </span>\r\n              {menu.label}\r\n            </a>\r\n          </Link>\r\n        </li>\r\n      );\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsLoading(false);\r\n    const updateNavbarColor = () => {\r\n      if (\r\n        document.documentElement.scrollTop > 399 ||\r\n        document.body.scrollTop > 399\r\n      ) {\r\n        setNavbarColor(\"\");\r\n      } else if (\r\n        document.documentElement.scrollTop < 400 ||\r\n        document.body.scrollTop < 400\r\n      ) {\r\n        setNavbarColor(\"navbar-transparent\");\r\n      }\r\n    };\r\n    window.addEventListener(\"scroll\", updateNavbarColor);\r\n    return function cleanup() {\r\n      window.removeEventListener(\"scroll\", updateNavbarColor);\r\n    };\r\n  }, [isLoading]);\r\n  return (\r\n    <>\r\n      {collapseOpen ? (\r\n        <div\r\n          id=\"bodyClick\"\r\n          onClick={() => {\r\n            document.documentElement.classList.toggle(\"nav-open\");\r\n            setCollapseOpen(false);\r\n          }}\r\n        />\r\n      ) : null}\r\n      <nav\r\n        className={\"navbar navbar-expand-lg bg-white fixed-top \" + navbarColor}\r\n        expand=\"lg\"\r\n        color=\"info\"\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"navbar-translate\">\r\n            <Link href={props.navMenu[0].link}>\r\n              <a className=\"navbar-brand\">\r\n                <img\r\n                  src={`../${props.navMenu[0].logo}`}\r\n                  alt=\"\"\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                />{\" \"}\r\n                {props.navMenu[0].brand}\r\n              </a>\r\n            </Link>\r\n            <button\r\n              className={`navbar-toggler ${collapseOpen ? \"toggled\" : \"\"}`}\r\n              onClick={() => {\r\n                document.documentElement.classList.toggle(\"nav-open\");\r\n                setCollapseOpen(!collapseOpen);\r\n              }}\r\n              aria-expanded={collapseOpen}\r\n              type=\"button\"\r\n            >\r\n              <span className=\"navbar-toggler-bar top-bar\"></span>\r\n              <span className=\"navbar-toggler-bar middle-bar\"></span>\r\n              <span className=\"navbar-toggler-bar bottom-bar\"></span>\r\n            </button>\r\n          </div>\r\n          <div className=\"collapse navbar-collapse justify-content-end\">\r\n            <ul className=\"navbar-nav\">{navMenu}</ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst PartnerFormSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(2, \"*invalid\")\r\n    .max(50, \"*invalid\")\r\n    .required(\"*required\"),\r\n  email: Yup.string()\r\n    .email(\"*invalid email\")\r\n    .required(\"*required\"),\r\n  message: Yup.string().required(\"*required\")\r\n});\r\n\r\nconst PartnerForm = () => {\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    organisation: \"\",\r\n    message: \"\"\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={PartnerFormSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        status,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <div\r\n            className={`form-group ${\r\n              touched.name ? (errors.name ? \"has-danger\" : \"has-success\") : \"\"\r\n            }`}\r\n          >\r\n            <label>\r\n              Name<span className=\"text-danger\"> *</span>\r\n            </label>\r\n            {errors.name && touched.name ? (\r\n              <span className=\"error-text\">{errors.name}</span>\r\n            ) : null}\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"name\"\r\n              value={values.name}\r\n              onChange={handleChange}\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div\r\n            className={`form-group ${\r\n              touched.email ? (errors.email ? \"has-danger\" : \"has-success\") : \"\"\r\n            }`}\r\n          >\r\n            <label>\r\n              Email<span className=\"text-danger\"> *</span>\r\n            </label>\r\n            {errors.email && touched.email ? (\r\n              <span className=\"error-text\">{errors.email}</span>\r\n            ) : null}\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"example@example.com\"\r\n              name=\"email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <br />\r\n          <div className=\"form-group\">\r\n            <label>Organisation/Business</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"organisation\"\r\n              value={values.organisation}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <br />\r\n          <div className=\"form-group\">\r\n            <label>\r\n              Message<span className=\"text-danger\"> *</span>\r\n            </label>\r\n            {errors.message && touched.message ? (\r\n              <span className=\"error-text\">{errors.message}</span>\r\n            ) : null}\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"message\"\r\n              rows=\"2\"\r\n              onChange={handleChange}\r\n              value={values.message}\r\n            ></textarea>\r\n          </div>\r\n          <div style={{ textAlign: \"right\" }}>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default PartnerForm;\r\n","import React, { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport CommonField, { CommonFiledSchema } from \"./CommonField\";\r\nimport CustomFieldGroup from \"./CustomFieldGroup\";\r\nimport ErrorFocus from \"./ErrorFocus\";\r\n\r\nconst regex = /^\\w.*\\S.*$/;\r\n\r\nconst VolunteerFormSchema = Yup.object().shape({\r\n  ...CommonFiledSchema,\r\n  tmpAvailability: Yup.string().matches(regex, \"*invalid format\"),\r\n  tmpInterest: Yup.string().matches(regex, \"*invalid format\"),\r\n  tmpSkill: Yup.string().matches(regex, \"*invalid format\")\r\n});\r\n\r\nconst availableGroupValues = {\r\n  name: \"available\",\r\n  tmp: \"tmpAvailability\",\r\n  groupTitle: \"Availability\",\r\n  className: \"form-check-inline\",\r\n  checkBoxLabels: [\"Whole Conference\", \"Friday\", \"Saturday\", \"Other\"],\r\n  placeholder: \"Please specify time available\"\r\n};\r\n\r\nconst interestGroupValues = {\r\n  name: \"interest\",\r\n  tmp: \"tmpInterest\",\r\n  groupTitle: \"Interested in:\",\r\n  className: \"\",\r\n  checkBoxLabels: [\r\n    \"Stage Management\",\r\n    \"Audio/Visual Production\",\r\n    \"Registration & Admin\",\r\n    \"Food & Catering\",\r\n    \"Photography/Videography\",\r\n    \"Logistics & Cleaning\",\r\n    \"Other\"\r\n  ],\r\n  placeholder: \"Click add to include input values\"\r\n};\r\n\r\nconst skillGroupValues = {\r\n  name: \"skill\",\r\n  tmp: \"tmpSkill\",\r\n  groupTitle: \"Any special gifts/skills?\",\r\n  className: \"\",\r\n  checkBoxLabels: [\r\n    \"Layout/Graphics Designer\",\r\n    \"Artist\",\r\n    \"Comp. Tech.\",\r\n    \"First Aid\",\r\n    \"Worship leader/Musician\",\r\n    \"Other\"\r\n  ],\r\n  placeholder: \"Click add to include input values\"\r\n};\r\n\r\nconst VolunteerForm = () => {\r\n  const initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    countryCode: \"\",\r\n    phone: \"\",\r\n    conference: [],\r\n    church: \"\",\r\n    available: [],\r\n    interest: [],\r\n    skill: [],\r\n    message: \"\"\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={VolunteerFormSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}>\r\n      {({\r\n        values,\r\n        errors,\r\n        status,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <CommonField\r\n            values={values}\r\n            errors={errors}\r\n            status={status}\r\n            touched={touched}\r\n            handleChange={handleChange}\r\n          />\r\n          <br />\r\n          <div className=\"form-group\">\r\n            <label>Where do you attend church?</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Church Name, City\"\r\n              name=\"church\"\r\n              value={values.church}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <br />\r\n          <CustomFieldGroup\r\n            values={values}\r\n            errors={errors}\r\n            handleChange={handleChange}\r\n            groupValues={availableGroupValues}\r\n          />\r\n          <br />\r\n          <CustomFieldGroup\r\n            values={values}\r\n            errors={errors}\r\n            handleChange={handleChange}\r\n            groupValues={interestGroupValues}\r\n          />\r\n          <br />\r\n          <CustomFieldGroup\r\n            values={values}\r\n            errors={errors}\r\n            handleChange={handleChange}\r\n            groupValues={skillGroupValues}\r\n          />\r\n          <br />\r\n          <div className=\"form-group\">\r\n            <label>Comments</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"message\"\r\n              rows=\"2\"\r\n              onChange={handleChange}\r\n              value={values.message}></textarea>\r\n          </div>\r\n          <div style={{ textAlign: \"right\" }}>\r\n            {Object.values(touched).length > 0 ? (\r\n              Object.values(errors).length > 0 ? (\r\n                <div\r\n                  className=\"text-danger\"\r\n                  style={{\r\n                    paddingRight: \"20px\",\r\n                    fontWeight: \"bold\",\r\n                    textTransform: \"uppercase\"\r\n                  }}>\r\n                  *Error in form. Please review inputs.\r\n                </div>\r\n              ) : null\r\n            ) : null}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n          <ErrorFocus />\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default VolunteerForm;\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport VolunteerForm from \"../components/VolunteerForm\";\r\nimport PartnerForm from \"../components/PartnerForm\";\r\n\r\nconst banner = {\r\n  title: \"Get Involved\",\r\n  subTitle: \"\",\r\n  image: \"../static/img/header-05-get-involved.jpg\"\r\n};\r\n\r\nconst volunteer = {\r\n  id: \"volunteer\",\r\n  title: \"Volunteering\",\r\n  info:\r\n    \"Conferences are hard work. We can’t do without helping hands so if you are keen to volunteer, we salute you! Oh, and please fill in the form, we promise to be in contact soon!\",\r\n  link: \"/get-involved#volunteer\",\r\n  linkLabel: \"Register\",\r\n  form: <VolunteerForm />,\r\n  formTitle: \"Emboldened Volunteer Registration\",\r\n  ref: \"volunteerForm\"\r\n};\r\n\r\nconst partner = {\r\n  id: \"partner\",\r\n  title: \"Partnership\",\r\n  info:\r\n    \"Our heart is to reach as many women as we can so if you are keen to explore possibilities with Emboldened, whether you are a church, business or an individual, we would love to hear from you.\",\r\n  link: \"/get-involved#partner\",\r\n  linkLabel: \"Partner with Us\",\r\n  form: <PartnerForm />,\r\n  formTitle: \"Partner with Us!\",\r\n  ref: \"partnerForm\"\r\n};\r\n\r\nconst donate = {\r\n  id: \"donation\",\r\n  title: \"Donation\",\r\n  info: \"Support us finacially\",\r\n  link: \"/get-involved#donation\",\r\n  linkLabel: \"Details\",\r\n  form: \"\"\r\n};\r\n\r\nconst GetInvolved = () => {\r\n  const [formShow, setFormShow] = useState(\"\");\r\n  const [partnerFormShow, setPartnerFormShow] = useState(\"\");\r\n\r\n  const handleVolunteerFormClick = () => {\r\n    if (formShow === \"show\") {\r\n      setFormShow(\" \");\r\n    } else {\r\n      setFormShow(\"show\");\r\n    }\r\n  };\r\n\r\n  const handlePartnerFormClick = () => {\r\n    if (partnerFormShow === \"show\") {\r\n      setPartnerFormShow(\" \");\r\n    } else {\r\n      setPartnerFormShow(\"show\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout banner={banner}>\r\n      <div className=\"section\">\r\n        <div className=\"container\">\r\n          <div className=\"card\" id={volunteer.id}>\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title \">{volunteer.title}</h4>\r\n              <p className=\"card-text\">{volunteer.info}</p>\r\n              <div className=\"text-right\">\r\n                <a\r\n                  href={volunteer.link}\r\n                  data-toggle=\"collapse\"\r\n                  onClick={handleVolunteerFormClick}>\r\n                  {volunteer.linkLabel}{\" \"}\r\n                  <i className=\"now-ui-icons arrows-1_minimal-down\"></i>\r\n                </a>\r\n              </div>\r\n              <div\r\n                className={`collapse ${formShow}`}\r\n                style={{ paddingTop: \"20px\" }}>\r\n                <div className=\"card-header\">\r\n                  <h6>{volunteer.formTitle}</h6>\r\n                </div>\r\n                <div className=\"card-body\">{volunteer.form}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card\" id={partner.id}>\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title \">{partner.title}</h4>\r\n              <p className=\"card-text\">{partner.info}</p>\r\n              <div className=\"text-right\">\r\n                <a\r\n                  href={partner.link}\r\n                  data-toggle=\"collapse\"\r\n                  onClick={handlePartnerFormClick}>\r\n                  {partner.linkLabel}{\" \"}\r\n                  <i className=\"now-ui-icons arrows-1_minimal-down\"></i>\r\n                </a>\r\n              </div>\r\n              <div\r\n                className={`collapse ${partnerFormShow}`}\r\n                style={{ paddingTop: \"20px\" }}>\r\n                <div className=\"card-header\">\r\n                  <h6>{partner.formTitle}</h6>\r\n                </div>\r\n                <div className=\"card-body\">{partner.form}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default GetInvolved;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAIA;AAIA;AAGA;AAGA;AACA;AAhBA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AADA;AASA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AADA;AASA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AADA;AAKA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAEA;AADA;AAUA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AADA;AAMA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAUA;AAAA;AAEA;AAAA;AAGA;AAAA;AAIA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrKA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AA9BA;AA+BA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAJA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;;;;;;;;;;;;;;;;;;AC9GA;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAFA;AAKA;AAGA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAUA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAkBA;AACA;AAoBA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;AACA;AAIA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAGA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAHA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC9IA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC5GA;AACA;AACA;AAEA;AACA;AAIA;AAGA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAEA;AADA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AADA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAEA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AA9EA;AA0FA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9HA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AASA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAQA;AAbA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAYA;AACA;AACA;AAHA;AA1EA;AAsFA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5KA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAGA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAGA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}